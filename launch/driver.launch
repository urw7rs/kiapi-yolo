<launch>
    <!-- cilab camera -->

    <arg name="device" default="/dev/video0" />
    <arg name="resolution" default="240p"/>
    <arg name="framerate" default="10"/>


    <group if="$(eval arg('resolution') == '240p')">
        <include file="$(find uvc_camera)/launch/cilab_camera_driver.launch">
                <arg name="pixel_width" value="320"/>
                <arg name="pixel_height" value="240"/>
        </include>
    </group>
    <group if="$(eval arg('resolution') == '720p')">
        <include file="$(find uvc_camera)/launch/cilab_camera_driver.launch">
                <arg name="pixel_width" value="1280"/>
                <arg name="pixel_height" value="720"/>
        </include>
    </group>
    <group if="$(eval arg('resolution') == '1080p')">
        <include file="$(find uvc_camera)/launch/cilab_camera_driver.launch">
                <arg name="pixel_width" value="1920"/>
                <arg name="pixel_height" value="1080"/>
        </include>
    </group>

    <node name="republish" type="republish" pkg="image_transport" output="screen" args="compressed in:=/image_raw out:=/usb_cam/image_raw"/>
    <node name="web_video_server" pkg="web_video_server" type="web_video_server" output="screen"/>

    <!-- cilab driver -->

    <param name="use_sim_time" value="false"/>


    <!-- Launch cilab_driver node -->
    <node name="cilab_driver" pkg="cilab_driver" type="cilab_driver" output="screen" respawn="true">
        <rosparam file="$(find cilab_driver)/config/cilab_params.yaml" command="load"/>
        <param name="publish_odom_transform" value="true"/>
        <param name="odom_frame"             value="/odom"/>
    </node>

    <node pkg="tf" type="static_transform_publisher" name="base_footprint_to_imu" args="0.0 0 0.05 0 0 0 base_footprint base_imu_link 20"/>

    <!-- cilab lidar -->

    <arg name="lidar_type" value="$(env LIDAR_TYPE)"/>

    <group if="$(eval arg('lidar_type') == 'XAS')">
        <include file="$(find rplidar_ros)/launch/rplidar_filtered.launch"/>
        <node pkg="tf" type="static_transform_publisher" name="base_foot_print_to_laser" args="0.1 0 0.1 3.1415926 0 0 base_footprint laser 20"/>
    </group>


    <group if="$(eval arg('lidar_type') == 'XT1')">
        <include file="$(find sc_mini)/launch/start.launch"/>
        <node pkg="tf" type="static_transform_publisher" name="base_foot_print_to_laser" args="0.1 0 0.1 -1.57 0 0 base_footprint laser 20"/>
    </group>

    <group if="$(eval arg('lidar_type') == 'YT1')">
        <include file="$(find sc_mini)/launch/start.launch"/>
        <node pkg="tf" type="static_transform_publisher" name="base_foot_print_to_laser" args="0.0 0 0.1 3.1415926 0 0 base_footprint laser 20"/>
    </group>
        <node pkg="laser_filters" type="scan_to_scan_filter_chain" output="log" name="laser_filter">
            <rosparam command="load" file="$(find cilab_driver)/config/cilab_laserfilter.yaml"/>
            <remap from="/scan" to="/scan_raw"/>
            <remap from="/scan_filtered" to="/scan"/>
        </node>

</launch>
